# Generated by Django 4.2.7 on 2025-08-15 07:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_type', models.CharField(choices=[('access_controls', 'Access Controls'), ('data_encryption', 'Data Encryption'), ('backup_recovery', 'Backup & Recovery'), ('user_training', 'User Training'), ('risk_assessment', 'Risk Assessment'), ('incident_response', 'Incident Response'), ('data_retention', 'Data Retention')], max_length=30)),
                ('audit_date', models.DateField()),
                ('auditor', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('compliant', 'Compliant'), ('non_compliant', 'Non-Compliant'), ('partial', 'Partially Compliant'), ('pending', 'Pending Review')], max_length=20)),
                ('findings', models.TextField()),
                ('recommendations', models.TextField(blank=True)),
                ('corrective_actions', models.TextField(blank=True)),
                ('next_audit_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-audit_date'],
            },
        ),
        migrations.CreateModel(
            name='SecurityIncident',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('incident_type', models.CharField(choices=[('unauthorized_access', 'Unauthorized Access'), ('data_breach', 'Data Breach'), ('suspicious_login', 'Suspicious Login'), ('malware', 'Malware Detection'), ('phishing', 'Phishing Attempt'), ('ddos', 'DDoS Attack'), ('insider_threat', 'Insider Threat')], max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Investigating'), ('contained', 'Contained'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('data_types_affected', models.JSONField(default=list)),
                ('estimated_records_affected', models.PositiveIntegerField(blank=True, null=True)),
                ('detected_at', models.DateTimeField()),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('containment_actions', models.TextField(blank=True)),
                ('resolution_actions', models.TextField(blank=True)),
                ('lessons_learned', models.TextField(blank=True)),
                ('authorities_notified', models.BooleanField(default=False)),
                ('users_notified', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('regulatory_filing_required', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('affected_users', models.ManyToManyField(blank=True, related_name='security_incidents', to=settings.AUTH_USER_MODEL)),
                ('investigated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='investigated_incidents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-detected_at'],
            },
        ),
        migrations.CreateModel(
            name='PrivacySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_visibility', models.CharField(choices=[('private', 'Private - Only me'), ('therapist', 'Therapist only'), ('friends', 'Friends only'), ('public', 'Public')], default='private', max_length=20)),
                ('mood_data_visibility', models.CharField(choices=[('private', 'Private - Only me'), ('therapist', 'Therapist only'), ('friends', 'Friends only'), ('public', 'Public')], default='therapist', max_length=20)),
                ('journal_visibility', models.CharField(choices=[('private', 'Private - Only me'), ('therapist', 'Therapist only'), ('friends', 'Friends only'), ('public', 'Public')], default='private', max_length=20)),
                ('activity_visibility', models.CharField(choices=[('private', 'Private - Only me'), ('therapist', 'Therapist only'), ('friends', 'Friends only'), ('public', 'Public')], default='private', max_length=20)),
                ('mood_data_retention', models.IntegerField(choices=[(30, '30 days'), (90, '90 days'), (365, '1 year'), (1095, '3 years'), (-1, 'Indefinitely')], default=365)),
                ('journal_data_retention', models.IntegerField(choices=[(30, '30 days'), (90, '90 days'), (365, '1 year'), (1095, '3 years'), (-1, 'Indefinitely')], default=1095)),
                ('chat_data_retention', models.IntegerField(choices=[(30, '30 days'), (90, '90 days'), (365, '1 year'), (1095, '3 years'), (-1, 'Indefinitely')], default=90)),
                ('allow_therapist_messages', models.BooleanField(default=True)),
                ('allow_peer_messages', models.BooleanField(default=False)),
                ('allow_group_invitations', models.BooleanField(default=True)),
                ('allow_research_participation', models.BooleanField(default=False)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('login_notifications', models.BooleanField(default=True)),
                ('data_export_notifications', models.BooleanField(default=True)),
                ('terms_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('privacy_policy_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('hipaa_authorization_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='privacy_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataExportRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('data_types', models.JSONField(default=list)),
                ('file_format', models.CharField(choices=[('json', 'JSON'), ('csv', 'CSV')], default='json', max_length=10)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('download_token', models.CharField(blank=True, max_length=64)),
                ('download_expires_at', models.DateTimeField(blank=True, null=True)),
                ('downloaded_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataEncryption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encryption_key', models.TextField()),
                ('salt', models.CharField(max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rotated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='encryption_keys', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataDeletionRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('processing', 'Processing'), ('completed', 'Completed'), ('denied', 'Denied')], default='pending', max_length=20)),
                ('reason', models.TextField(max_length=1000)),
                ('data_types', models.JSONField(default=list)),
                ('retention_override', models.BooleanField(default=False)),
                ('review_notes', models.TextField(blank=True)),
                ('scheduled_deletion_date', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_deletions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deletion_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_type', models.CharField(choices=[('terms_of_service', 'Terms of Service'), ('privacy_policy', 'Privacy Policy'), ('hipaa_authorization', 'HIPAA Authorization'), ('data_processing', 'Data Processing'), ('marketing', 'Marketing Communications'), ('research', 'Research Participation'), ('data_sharing', 'Data Sharing'), ('cookies', 'Cookie Usage')], max_length=30)),
                ('granted', models.BooleanField()),
                ('version', models.CharField(max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('evidence', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consent_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'consent_type', '-timestamp'], name='privacy_con_user_id_5e06eb_idx')],
            },
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('view', 'View'), ('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('export', 'Export'), ('share', 'Share')], max_length=20)),
                ('resource_type', models.CharField(choices=[('mood_entry', 'Mood Entry'), ('journal_entry', 'Journal Entry'), ('chat_message', 'Chat Message'), ('appointment', 'Appointment'), ('therapy_notes', 'Therapy Notes'), ('assessment', 'Assessment'), ('profile', 'Profile')], max_length=20)),
                ('resource_id', models.CharField(max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('accessor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accesses_made', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='privacy_acc_user_id_f7bc58_idx'), models.Index(fields=['resource_type', 'resource_id'], name='privacy_acc_resourc_97580e_idx')],
            },
        ),
    ]
